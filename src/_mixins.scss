// Mixin for Flex Row Centering
@mixin flex-row-center($direction: row, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Flex Column Centering
@mixin flex-column-center($direction: column, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Justify Content: Space Between
@mixin space-between-row($direction: row, $justify: space-between, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Justify Content: Space Around
@mixin space-around-row($direction: row, $justify: space-around, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Align Items Center
@mixin align-items-center($direction: row, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Align Items Start
@mixin align-items-start($direction: row, $justify: flex-start, $align: flex-start) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Align Items End
@mixin align-items-end($direction: row, $justify: flex-end, $align: flex-end) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Align Content Flex Start
@mixin align-content-start($direction: row, $justify: flex-start, $align: flex-start) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-content: $align;
}

// Mixin for Flex Wrap (wrap and nowrap)
@mixin flex-wrap($wrap: wrap) {
    display: flex;
    flex-wrap: $wrap;
}

// Mixin for Align Content Space Between
@mixin align-content-space-between($direction: row, $justify: space-between, $align: space-between) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-content: $align;
}

// Mixin for Flex Direction Column Reverse
@mixin flex-column-reverse($direction: column-reverse, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Flex Direction Row Reverse
@mixin flex-row-reverse($direction: row-reverse, $justify: center, $align: center) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Align Items Stretch
@mixin align-items-stretch($direction: row, $justify: center, $align: stretch) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

// Mixin for Flex Item Grow
@mixin flex-grow($grow: 1) {
    flex-grow: $grow;
}

// Mixin for Flex Item Shrink
@mixin flex-shrink($shrink: 1) {
    flex-shrink: $shrink;
}

// Mixin for Flex Item Basis
@mixin flex-basis($basis: auto) {
    flex-basis: $basis;
}

// Mixin for Flex Items
@mixin flex($grow: 0, $shrink: 1, $basis: auto) {
    flex: $grow $shrink $basis;
}

// text hover animation

@mixin transition-hover($time: 0.3s, $anim: ease-in) {
    transition: all $time $anim;
}

@mixin orange-hover($color: vars.$orange) {
    &:hover {
        color: $color;
    }
}
@mixin cursor-pointer($pointer:pointer){
    cursor: $pointer;
}



@mixin hover-animation($time: 0.1s, $anim: ease-in, $color: vars.$orange, $pointer: pointer, $cursor-only: false) {
    @if $cursor-only == false {
        @include transition-hover($time, $anim);
        @include orange-hover($color);
    }
    @include cursor-pointer($pointer);
}


@mixin svg-fill-hover($default-fill, $hover-fill: vars.$orange, $transition-duration: 0.2s , $pointer:pointer) {
    fill: $default-fill; 
    transition: fill $transition-duration ease; 
  
    &:hover {
      fill: $hover-fill; 
    }
    @include cursor-pointer($pointer);
  }
  

  @mixin hover-background-orange($time:0.2s, $anim:ease-in,$color:vars.$hover-orange, $pointer:pointer){
    &:hover{
        background-color:$color;
        transition-duration: $time;
        cursor: $pointer;
    }
  }


  @mixin blog-card-bg($image-url) {
    width: 100%;
    height: 240px;
    border-top-left-radius: 15px;
    border-top-right-radius: 15px;
    overflow: hidden; 
    cursor: pointer;
    position: relative; 

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url(#{$image-url});
        background-position: center;
        background-size: cover;
        background-repeat: no-repeat;
        transition: transform 0.3s ease-in-out;
    }

    &:hover::before {
        transform: scale(1.1);
    }
}
// .blog-card-image-container {
//     &:nth-child(1) {
//         @include blog-card-bg("https://startersites.io/blocksy/smart-home/wp-content/uploads/2023/12/article-thumb-6-768x461.webp");
//     }

//     &:nth-child(2) {
//         @include blog-card-bg("https://startersites.io/blocksy/smart-home/wp-content/uploads/2023/12/article-thumb-7-1024x614.webp");
//     }

// }